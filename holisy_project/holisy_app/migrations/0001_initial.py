# Generated by Django 3.2.4 on 2021-06-10 18:24

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.IntegerField(auto_created=True, primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('birth_date', models.DateField(null=True)),
                ('post', models.CharField(blank=True, max_length=32, null=True)),
                ('salary', models.IntegerField(blank=True, null=True)),
                ('phone', models.CharField(max_length=12)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('room_number', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='room', max_length=32, verbose_name='Название комнаты')),
                ('beds_number', models.IntegerField(blank=True, null=True, verbose_name='Количество мест')),
                ('day_cost', models.IntegerField(blank=True, null=True, verbose_name='Стоимость за сутки')),
                ('room_class', models.CharField(max_length=32, verbose_name='Класс комнаты')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Изображение')),
                ('description', models.TextField(verbose_name='Описание комнаты')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('service_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=32, verbose_name='Название услуги')),
                ('description', models.TextField(verbose_name='Описание услуги')),
                ('cost', models.IntegerField(blank=True, null=True, verbose_name='Стоимость')),
                ('employee_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='topic_employee_id', to=settings.AUTH_USER_MODEL, verbose_name='Сотрудник')),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('booking_id', models.IntegerField(primary_key=True, serialize=False)),
                ('arrival_date', models.DateField(null=True, verbose_name='Дата заезда')),
                ('departure_date', models.DateField(null=True, verbose_name='Дата выезда')),
                ('result_cost', models.IntegerField(blank=True, default=0, null=True, verbose_name='Счет')),
                ('status', models.CharField(choices=[('p', 'Ожидает оплаты'), ('v', 'На подтверждении'), ('l', 'В процессе'), ('c', 'Завершен')], max_length=1, verbose_name='Статус')),
                ('client_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='topic_client_id', to=settings.AUTH_USER_MODEL, verbose_name='Гость')),
                ('room_number', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='topic_room_number', to='holisy_app.room', verbose_name='Номер комнаты')),
                ('services', models.ManyToManyField(blank=True, null=True, related_name='booking_services', to='holisy_app.Service', verbose_name='Заказанные услуги')),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('application_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=32, verbose_name='Название заявки')),
                ('description', models.TextField(verbose_name='Описание заявки')),
                ('status', models.CharField(choices=[('p', 'В ожидании'), ('l', 'Выполняется'), ('c', 'Выполнен')], max_length=1, verbose_name='Статус')),
                ('booking_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='topic_booking_id', to='holisy_app.booking', verbose_name='Номер брони')),
                ('employee_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='topic_manager_id', to=settings.AUTH_USER_MODEL, verbose_name='Сотрудник')),
            ],
        ),
    ]
